{
  "@id": "dtmi:com:Microchip:WFI32_IoT_WM;2",
  "@type": "Interface",
  "contents": [
    {
      "@type": [
        "Telemetry",
        "Temperature"
      ],
      "description": {
        "en": "Temperature in degrees Celsius from Microchip MCP9808 high-accuracy temperature sensor."
      },
      "displayName": {
        "en": "Temperature (WFI32-IoT)"
      },
      "name": "WFI32IoT_temperature",
      "schema": "integer",
      "unit": "degreeCelsius"
    },
    {
      "@type": [
        "Telemetry",
        "Illuminance"
      ],
      "description": {
        "en": "Brightness in illuminance from Texas Instruments OPT3001 ambient light sensor."
      },
      "displayName": {
        "en": "Brightness from Light Sensor (WFI32-IoT)"
      },
      "name": "WFI32IoT_light",
      "schema": "integer",
      "unit": "lux"
    },
    {
      "@type": [
        "Telemetry",
        "Pressure"
      ],
      "displayName": {
          "en": "Pressure (ULP Click)"
        },
      "name": "ULP_pressure",
      "schema": "double",
      "unit": "pascal"
    },
    {
      "@type": [
        "Telemetry",
        "Temperature"
      ],
      "displayName": {
          "en": "Temperature (ULP Click)"
        },
      "name": "ULP_temperature",
      "schema": "double",
      "unit": "degreeCelsius"
    },
    {
      "@type": [
        "Telemetry",
        "Pressure"
      ],
      "displayName": {
          "en": "Pressure (VAV Click)"
        },
      "name": "VAV_pressure",
      "schema": "double",
      "unit": "pascal"
    },
    {
      "@type": [
        "Telemetry",
        "Temperature"
      ],
      "displayName": {
          "en": "Temperature (VAV Click)"
        },
      "name": "VAV_temperature",
      "schema": "double",
      "unit": "degreeCelsius"
    },
    {
      "@type": "Telemetry",
      "description": {
        "en": "Event triggered when button is pressed"
      },
      "displayName": {
        "en": "Button Push Event"
      },
      "name": "button_event",
      "schema": {
        "@type": "Object",
        "fields": [
          {
            "name": "button_name",
            "schema": "string"
          },
          {
            "name": "press_count",
            "schema": "integer"
          }
        ]
      }
    },
    {
      "@type": "Property",
      "description": {
        "en": "Returns current state of the Blue LED. If True, the Blue LED is on and the WiFi AP is connected."
      },
      "displayName": {
        "en": "Blue LED state"
      },
      "name": "led_b",
      "schema": "dtmi:com:Microchip:WFI32_IoT_WM:LedState;1",
      "writable": false
    },
    {
      "@type": "Property",
      "description": {
        "en": "The current state of the Green LED. When it is on, WFI32-IoT is connected to Cloud."
      },
      "displayName": {
        "en": "Green LED state"
      },
      "name": "led_g",
      "schema": "dtmi:com:Microchip:WFI32_IoT_WM:LedState;1",
      "writable": false
    },
    {
      "@type": "Property",
      "description": {
        "en": "The current state of the Red LED. When it is on or blinking, WFI32-IoT has experienced error condition(s)."
      },
      "displayName": {
        "en": "Red LED state"
      },
      "name": "led_r",
      "schema": "dtmi:com:Microchip:WFI32_IoT_WM:LedState;1",
      "writable": false
    },
    {
      "@type": "Property",
      "description": {
        "en": "Set the state of the Yellow LED (Off, On, or Blink)."
      },
      "displayName": {
        "en": "Yellow LED state"
      },
      "name": "led_y",
      "schema": "dtmi:com:Microchip:WFI32_IoT_WM:LedState;1",
      "writable": true
    },
    {
      "@type": [
        "Property",
        "TimeSpan"
      ],
      "description": {
        "en": "Sets interval to send telemetry in seconds."
      },
      "displayName": {
        "en": "Telemetry Interval"
      },
      "name": "telemetryInterval",
      "schema": "integer",
      "unit": "second",
      "writable": true
    },
    {
      "@type": "Command",
      "description": {
        "en": "Reboot WFI32 IoT with the specified delay (e.g. PT5S for 5 seconds)."
      },
      "displayName": {
        "en": "Reboot"
      },
      "name": "reboot",
      "request": {
        "@type": "CommandPayload",
        "description": {
          "en": "Number of seconds to delay reboot (e.g. PT5S for 5 seconds)."
        },
        "displayName": {
          "en": "Reboot Delay"
        },
        "name": "delay",
        "schema": "duration"
      },
      "response": {
        "@type": "CommandPayload",
        "displayName": {
          "en": "Response for command"
        },
        "name": "response",
        "schema": {
          "@type": "Object",
          "fields": [
            {
              "displayName": {
                "en": "Message from reboot handler"
              },
              "name": "status",
              "schema": "string"
            },
            {
              "displayName": {
                "en": "Number of seconds to delay the reboot"
              },
              "name": "delay",
              "schema": "integer"
            }
          ]
        }
      }
    },
    {
        "@type": "Command",
        "description": {
            "en": "Send a text message for the WFI32-IoT to receive and process."
        },
        "displayName": {
            "en": "Send Message"
        },
        "name": "sendMsg",
        "request": {
            "@type": "CommandPayload",
            "description": {
                "en": "Text message to send to WFI32-IoT"
            },
            "displayName": {
                "en": "Message"
            },
            "name": "payload",
            "schema": {
                "@type": "Object",
                "fields": [
                    {
                        "displayName": {
                            "en": "String to send"
                        },
                        "name": "sendMsgString",
                        "schema": "string"
                    }
                ]
            }
        },
        "response": {
            "@type": "CommandPayload",
            "displayName": {
                "en": "Response for command"
            },
            "name": "response",
            "schema": {
                "@type": "Object",
                "fields": [
                    {
                        "displayName": {
                            "en": "Message from send message handler"
                        },
                        "name": "status",
                        "schema": "string"
                    }
                ]
            }
        }
    },
    {
      "@id": "dtmi:com:Microchip:WFI32_IoT_WM:press_count;1",
      "@type": [
        "Telemetry"
      ],
      "displayName": {
        "en": "Button Press Count"
      },
      "name": "press_count",
      "schema": "double"
    }
  ],
  "description": {
    "en": "Reports device temperature, light intensity, and the current state of the 2 user buttons & 4 LEDs."
  },
  "displayName": {
    "en": "WFI32-IoT WM"
  },
  "schemas": [
    {
      "@id": "dtmi:com:Microchip:WFI32_IoT_WM:LedState;1",
      "@type": "Enum",
      "enumValues": [
        {
          "@id": "dtmi:com:Microchip:WFI32_IoT_WM:LedState:Off;1",
          "displayName": {
            "en": "LED Off"
          },
          "enumValue": 0,
          "name": "Off"
        },
        {
          "@id": "dtmi:com:Microchip:WFI32_IoT_WM:LedState:On;1",
          "displayName": {
            "en": "LED On"
          },
          "enumValue": 1,
          "name": "On"
        },
        {
          "@id": "dtmi:com:Microchip:WFI32_IoT_WM:LedState:Blink;1",
          "displayName": {
            "en": "LED Blinking"
          },
          "enumValue": 2,
          "name": "Blink"
        }
      ],
      "valueSchema": "integer"
    }
  ],
  "@context": [
    "dtmi:iotcentral:context;2",
    "dtmi:dtdl:context;2"
  ]
}